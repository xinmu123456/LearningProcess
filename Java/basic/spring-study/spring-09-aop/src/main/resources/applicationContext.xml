<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--指定要扫描的包,这个包下的注解就会生效-->
    <context:component-scan base-package="com.xinmu"/>
    <context:annotation-config/>
    <!--注册bean-->
    <bean id="userService" class="com.xinmu.service.UserServiceImpl"/>
    <bean id="log" class="log.Log"/>
    <bean id="afterLogin" class="log.AfterLog"/>

    <!--&lt;!&ndash;  配置aop 需要导入aop的约束  &ndash;&gt;-->
    <!--<aop:config>-->
    <!--&lt;!&ndash;  切入点 expression:表达式,execution(要执行的位置) &ndash;&gt;-->
    <!--    <aop:pointcut id="pointcut" expression="execution(* com.xinmu.service.UserServiceImpl.*(..))"/>-->

    <!--&lt;!&ndash;  执行环绕增加  &ndash;&gt;-->
    <!--    <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
    <!--    <aop:advisor advice-ref="afterLogin" pointcut-ref="pointcut"/>-->

    <!--</aop:config>-->

    <!--方式二:自定义类-->
    <!--<bean id="diy"  class="diy.DiyPointCut"/>-->

    <!--<aop:config>-->
    <!--    &lt;!&ndash;自定义切面 , ref 引用的类&ndash;&gt;-->
    <!--    <aop:aspect ref="diy">-->
    <!--    &lt;!&ndash;  切入点  &ndash;&gt;-->
    <!--        <aop:pointcut id="point" expression="execution(* com.xinmu.service.UserServiceImpl.*(..))"/>-->
    <!--    &lt;!&ndash;通知&ndash;&gt;-->
    <!--        <aop:before method="before" pointcut-ref="point"/>-->
    <!--        <aop:after method="after" pointcut-ref="point"/>-->
    <!--    </aop:aspect>-->
    <!--</aop:config>-->


<!--  方式三  -->
    <bean id="annotationPointCut" class="diy.AnnotationPointCut"/>
<!--  开启注解支持  -->
    <aop:aspectj-autoproxy/>

</beans>